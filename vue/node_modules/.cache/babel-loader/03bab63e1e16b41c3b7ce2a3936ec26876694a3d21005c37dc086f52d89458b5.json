{"ast":null,"code":"import { rectToClientRect, computePosition as computePosition$1 } from '@floating-ui/core';\nexport { arrow, autoPlacement, detectOverflow, flip, hide, inline, limitShift, offset, shift, size } from '@floating-ui/core';\nfunction getWindow(node) {\n  var _node$ownerDocument;\n  return ((_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\nfunction getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}\nfunction getNodeName(node) {\n  return isNode(node) ? (node.nodeName || '').toLowerCase() : '';\n}\nfunction getUAString() {\n  const uaData = navigator.userAgentData;\n  if (uaData && Array.isArray(uaData.brands)) {\n    return uaData.brands.map(item => item.brand + \"/\" + item.version).join(' ');\n  }\n  return navigator.userAgent;\n}\nfunction isHTMLElement(value) {\n  return value instanceof getWindow(value).HTMLElement;\n}\nfunction isElement(value) {\n  return value instanceof getWindow(value).Element;\n}\nfunction isNode(value) {\n  return value instanceof getWindow(value).Node;\n}\nfunction isShadowRoot(node) {\n  // Browsers without `ShadowRoot` support\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n  const OwnElement = getWindow(node).ShadowRoot;\n  return node instanceof OwnElement || node instanceof ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  // Firefox wants us to check `-x` and `-y` variations as well\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle(element);\n  return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isContainingBlock(element) {\n  // TODO: Try and use feature detection here instead\n  const isFirefox = /firefox/i.test(getUAString());\n  const css = getComputedStyle(element);\n  const backdropFilter = css.backdropFilter || css.WebkitBackdropFilter; // This is non-exhaustive but covers the most common CSS properties that\n  // create a containing block.\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n\n  return css.transform !== 'none' || css.perspective !== 'none' || (backdropFilter ? backdropFilter !== 'none' : false) || isFirefox && css.willChange === 'filter' || isFirefox && (css.filter ? css.filter !== 'none' : false) || ['transform', 'perspective'].some(value => css.willChange.includes(value)) || ['paint', 'layout', 'strict', 'content'].some(\n  // TS 4.1 compat\n  value => {\n    const contain = css.contain;\n    return contain != null ? contain.includes(value) : false;\n  });\n}\nfunction isLayoutViewport() {\n  // Not Safari\n  return !/^((?!chrome|android).)*safari/i.test(getUAString()); // Feature detection for this fails in various ways\n  // • Always-visible scrollbar or not\n  // • Width of <html>, etc.\n  // const vV = win.visualViewport;\n  // return vV ? Math.abs(win.innerWidth / vV.scale - vV.width) < 0.5 : true;\n}\n\nfunction isLastTraversableNode(node) {\n  return ['html', 'body', '#document'].includes(getNodeName(node));\n}\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy) {\n  var _win$visualViewport$o, _win$visualViewport, _win$visualViewport$o2, _win$visualViewport2;\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  let contextRect = clientRect;\n  let elementToCheckForScale = element;\n  let scaleX = 1;\n  let scaleY = 1;\n  if (!isElement(element) && element.contextElement) {\n    contextRect = element.contextElement.getBoundingClientRect();\n    elementToCheckForScale = element.contextElement;\n  }\n  if (includeScale && isHTMLElement(elementToCheckForScale)) {\n    scaleX = elementToCheckForScale.offsetWidth > 0 ? round(contextRect.width) / elementToCheckForScale.offsetWidth || 1 : 1;\n    scaleY = elementToCheckForScale.offsetHeight > 0 ? round(contextRect.height) / elementToCheckForScale.offsetHeight || 1 : 1;\n  }\n  const win = isElement(element) ? getWindow(element) : window;\n  const addVisualOffsets = !isLayoutViewport() && isFixedStrategy;\n  const x = (clientRect.left + (addVisualOffsets ? (_win$visualViewport$o = (_win$visualViewport = win.visualViewport) == null ? void 0 : _win$visualViewport.offsetLeft) != null ? _win$visualViewport$o : 0 : 0)) / scaleX;\n  const y = (clientRect.top + (addVisualOffsets ? (_win$visualViewport$o2 = (_win$visualViewport2 = win.visualViewport) == null ? void 0 : _win$visualViewport2.offsetTop) != null ? _win$visualViewport$o2 : 0 : 0)) / scaleY;\n  const width = clientRect.width / scaleX;\n  const height = clientRect.height / scaleY;\n  return {\n    width,\n    height,\n    top: y,\n    right: x + width,\n    bottom: y + height,\n    left: x,\n    x,\n    y\n  };\n}\nfunction getDocumentElement(node) {\n  return ((isNode(node) ? node.ownerDocument : node.document) || window.document).documentElement;\n}\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.pageXOffset,\n    scrollTop: element.pageYOffset\n  };\n}\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;\n}\nfunction isScaled(element) {\n  const rect = getBoundingClientRect(element);\n  return round(rect.width) !== element.offsetWidth || round(rect.height) !== element.offsetHeight;\n}\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const rect = getBoundingClientRect(element,\n  // @ts-ignore - checked above (TS 4.1 compat)\n  isOffsetParentAnElement && isScaled(offsetParent), strategy === 'fixed');\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = {\n    x: 0,\n    y: 0\n  };\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent, true);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n  return {\n    x: rect.left + scroll.scrollLeft - offsets.x,\n    y: rect.top + scroll.scrollTop - offsets.y,\n    width: rect.width,\n    height: rect.height\n  };\n}\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n  const result =\n  // Step into the shadow DOM of the parent of a slotted node\n  node.assignedSlot ||\n  // DOM Element detected\n  node.parentNode || (\n  // ShadowRoot detected\n  isShadowRoot(node) ? node.host : null) ||\n  // Fallback\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\nfunction getTrueOffsetParent(element) {\n  if (!isHTMLElement(element) || getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n  return element.offsetParent;\n}\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else {\n      currentNode = getParentNode(currentNode);\n    }\n  }\n  return null;\n} // Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\n\nfunction getOffsetParent(element) {\n  const window = getWindow(element);\n  let offsetParent = getTrueOffsetParent(element);\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle(offsetParent).position === 'static') {\n    offsetParent = getTrueOffsetParent(offsetParent);\n  }\n  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle(offsetParent).position === 'static' && !isContainingBlock(offsetParent))) {\n    return window;\n  }\n  return offsetParent || getContainingBlock(element) || window;\n}\nfunction getDimensions(element) {\n  if (isHTMLElement(element)) {\n    return {\n      width: element.offsetWidth,\n      height: element.offsetHeight\n    };\n  }\n  const rect = getBoundingClientRect(element);\n  return {\n    width: rect.width,\n    height: rect.height\n  };\n}\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  if (offsetParent === documentElement) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = {\n    x: 0,\n    y: 0\n  };\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } // This doesn't appear to be need to be negated.\n    // else if (documentElement) {\n    //   offsets.x = getWindowScrollBarX(documentElement);\n    // }\n  }\n\n  return {\n    ...rect,\n    x: rect.x - scroll.scrollLeft + offsets.x,\n    y: rect.y - scroll.scrollTop + offsets.y\n  };\n}\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const layoutViewport = isLayoutViewport();\n    if (layoutViewport || !layoutViewport && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable\n\nfunction getDocumentRect(element) {\n  var _element$ownerDocumen;\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = (_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;\n  const width = max(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);\n  const height = max(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle(body || html).direction === 'rtl') {\n    x += max(html.clientWidth, body ? body.clientWidth : 0) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n  if (isLastTraversableNode(parentNode)) {\n    // @ts-ignore assume body is always available\n    return node.ownerDocument.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\nfunction getOverflowAncestors(node, list) {\n  var _node$ownerDocument;\n  if (list === void 0) {\n    list = [];\n  }\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.body);\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor));\n}\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, false, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  return {\n    top,\n    left,\n    x: left,\n    y: top,\n    right: left + element.clientWidth,\n    bottom: top + element.clientHeight,\n    width: element.clientWidth,\n    height: element.clientHeight\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  if (clippingAncestor === 'viewport') {\n    return rectToClientRect(getViewportRect(element, strategy));\n  }\n  if (isElement(clippingAncestor)) {\n    return getInnerBoundingClientRect(clippingAncestor, strategy);\n  }\n  return rectToClientRect(getDocumentRect(getDocumentElement(element)));\n} // A \"clipping ancestor\" is an overflowable container with the characteristic of\n// clipping (or hiding) overflowing elements with a position different from\n// `initial`\n\nfunction getClippingElementAncestors(element) {\n  let result = getOverflowAncestors(element).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element; // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle(currentNode);\n    const containingBlock = isContainingBlock(currentNode);\n    const shouldDropCurrentNode = elementIsFixed ? !containingBlock && !currentContainingBlockComputedStyle : !containingBlock && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position);\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  return result;\n} // Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors\n\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? getClippingElementAncestors(element) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\nconst platform = {\n  getClippingRect,\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  isElement,\n  getDimensions,\n  getOffsetParent,\n  getDocumentElement,\n  async getElementRects(_ref) {\n    let {\n      reference,\n      floating,\n      strategy\n    } = _ref;\n    const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n    const getDimensionsFn = this.getDimensions;\n    return {\n      reference: getRectRelativeToOffsetParent(reference, await getOffsetParentFn(floating), strategy),\n      floating: {\n        x: 0,\n        y: 0,\n        ...(await getDimensionsFn(floating))\n      }\n    };\n  },\n  getClientRects: element => Array.from(element.getClientRects()),\n  isRTL: element => getComputedStyle(element).direction === 'rtl'\n};\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll: _ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = true,\n    animationFrame = false\n  } = options;\n  const ancestorScroll = _ancestorScroll && !animationFrame;\n  const ancestors = ancestorScroll || ancestorResize ? [...(isElement(reference) ? getOverflowAncestors(reference) : reference.contextElement ? getOverflowAncestors(reference.contextElement) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  let observer = null;\n  if (elementResize) {\n    let initialUpdate = true;\n    observer = new ResizeObserver(() => {\n      if (!initialUpdate) {\n        update();\n      }\n      initialUpdate = false;\n    });\n    isElement(reference) && !animationFrame && observer.observe(reference);\n    if (!isElement(reference) && reference.contextElement && !animationFrame) {\n      observer.observe(reference.contextElement);\n    }\n    observer.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    var _observer;\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    (_observer = observer) == null ? void 0 : _observer.disconnect();\n    observer = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain CSS positioning\n * strategy.\n */\n\nconst computePosition = (reference, floating, options) => computePosition$1(reference, floating, {\n  platform,\n  ...options\n});\nexport { autoUpdate, computePosition, getOverflowAncestors, platform };","map":{"version":3,"names":["rectToClientRect","computePosition","computePosition$1","arrow","autoPlacement","detectOverflow","flip","hide","inline","limitShift","offset","shift","size","getWindow","node","_node$ownerDocument","ownerDocument","defaultView","window","getComputedStyle","element","getNodeName","isNode","nodeName","toLowerCase","getUAString","uaData","navigator","userAgentData","Array","isArray","brands","map","item","brand","version","join","userAgent","isHTMLElement","value","HTMLElement","isElement","Element","Node","isShadowRoot","ShadowRoot","OwnElement","isOverflowElement","overflow","overflowX","overflowY","display","test","includes","isTableElement","isContainingBlock","isFirefox","css","backdropFilter","WebkitBackdropFilter","transform","perspective","willChange","filter","some","contain","isLayoutViewport","isLastTraversableNode","min","Math","max","round","getBoundingClientRect","includeScale","isFixedStrategy","_win$visualViewport$o","_win$visualViewport","_win$visualViewport$o2","_win$visualViewport2","clientRect","contextRect","elementToCheckForScale","scaleX","scaleY","contextElement","offsetWidth","width","offsetHeight","height","win","addVisualOffsets","x","left","visualViewport","offsetLeft","y","top","offsetTop","right","bottom","getDocumentElement","document","documentElement","getNodeScroll","scrollLeft","scrollTop","pageXOffset","pageYOffset","getWindowScrollBarX","isScaled","rect","getRectRelativeToOffsetParent","offsetParent","strategy","isOffsetParentAnElement","scroll","offsets","offsetRect","clientLeft","clientTop","getParentNode","result","assignedSlot","parentNode","host","getTrueOffsetParent","position","getContainingBlock","currentNode","getOffsetParent","getDimensions","convertOffsetParentRelativeRectToViewportRelativeRect","_ref","getViewportRect","html","clientWidth","clientHeight","layoutViewport","getDocumentRect","_element$ownerDocumen","body","scrollWidth","scrollHeight","direction","getNearestOverflowAncestor","getOverflowAncestors","list","scrollableAncestor","isBody","concat","getInnerBoundingClientRect","getClientRectFromClippingAncestor","clippingAncestor","getClippingElementAncestors","el","currentContainingBlockComputedStyle","elementIsFixed","computedStyle","containingBlock","shouldDropCurrentNode","ancestor","getClippingRect","boundary","rootBoundary","elementClippingAncestors","clippingAncestors","firstClippingAncestor","clippingRect","reduce","accRect","platform","getElementRects","reference","floating","getOffsetParentFn","getDimensionsFn","getClientRects","from","isRTL","autoUpdate","update","options","ancestorScroll","_ancestorScroll","ancestorResize","elementResize","animationFrame","ancestors","forEach","addEventListener","passive","observer","initialUpdate","ResizeObserver","observe","frameId","prevRefRect","frameLoop","nextRefRect","requestAnimationFrame","_observer","removeEventListener","disconnect","cancelAnimationFrame"],"sources":["D:/JavaProjects/springboot+vue/springboot-vue-demo/vue/node_modules/@floating-ui/dom/dist/floating-ui.dom.browser.mjs"],"sourcesContent":["import { rectToClientRect, computePosition as computePosition$1 } from '@floating-ui/core';\nexport { arrow, autoPlacement, detectOverflow, flip, hide, inline, limitShift, offset, shift, size } from '@floating-ui/core';\n\nfunction getWindow(node) {\n  var _node$ownerDocument;\n\n  return ((_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\n\nfunction getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}\n\nfunction getNodeName(node) {\n  return isNode(node) ? (node.nodeName || '').toLowerCase() : '';\n}\n\nfunction getUAString() {\n  const uaData = navigator.userAgentData;\n\n  if (uaData && Array.isArray(uaData.brands)) {\n    return uaData.brands.map(item => item.brand + \"/\" + item.version).join(' ');\n  }\n\n  return navigator.userAgent;\n}\n\nfunction isHTMLElement(value) {\n  return value instanceof getWindow(value).HTMLElement;\n}\nfunction isElement(value) {\n  return value instanceof getWindow(value).Element;\n}\nfunction isNode(value) {\n  return value instanceof getWindow(value).Node;\n}\nfunction isShadowRoot(node) {\n  // Browsers without `ShadowRoot` support\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n\n  const OwnElement = getWindow(node).ShadowRoot;\n  return node instanceof OwnElement || node instanceof ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  // Firefox wants us to check `-x` and `-y` variations as well\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle(element);\n  return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isContainingBlock(element) {\n  // TODO: Try and use feature detection here instead\n  const isFirefox = /firefox/i.test(getUAString());\n  const css = getComputedStyle(element);\n  const backdropFilter = css.backdropFilter || css.WebkitBackdropFilter; // This is non-exhaustive but covers the most common CSS properties that\n  // create a containing block.\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n\n  return css.transform !== 'none' || css.perspective !== 'none' || (backdropFilter ? backdropFilter !== 'none' : false) || isFirefox && css.willChange === 'filter' || isFirefox && (css.filter ? css.filter !== 'none' : false) || ['transform', 'perspective'].some(value => css.willChange.includes(value)) || ['paint', 'layout', 'strict', 'content'].some( // TS 4.1 compat\n  value => {\n    const contain = css.contain;\n    return contain != null ? contain.includes(value) : false;\n  });\n}\nfunction isLayoutViewport() {\n  // Not Safari\n  return !/^((?!chrome|android).)*safari/i.test(getUAString()); // Feature detection for this fails in various ways\n  // • Always-visible scrollbar or not\n  // • Width of <html>, etc.\n  // const vV = win.visualViewport;\n  // return vV ? Math.abs(win.innerWidth / vV.scale - vV.width) < 0.5 : true;\n}\nfunction isLastTraversableNode(node) {\n  return ['html', 'body', '#document'].includes(getNodeName(node));\n}\n\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy) {\n  var _win$visualViewport$o, _win$visualViewport, _win$visualViewport$o2, _win$visualViewport2;\n\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n\n  const clientRect = element.getBoundingClientRect();\n  let contextRect = clientRect;\n  let elementToCheckForScale = element;\n  let scaleX = 1;\n  let scaleY = 1;\n\n  if (!isElement(element) && element.contextElement) {\n    contextRect = element.contextElement.getBoundingClientRect();\n    elementToCheckForScale = element.contextElement;\n  }\n\n  if (includeScale && isHTMLElement(elementToCheckForScale)) {\n    scaleX = elementToCheckForScale.offsetWidth > 0 ? round(contextRect.width) / elementToCheckForScale.offsetWidth || 1 : 1;\n    scaleY = elementToCheckForScale.offsetHeight > 0 ? round(contextRect.height) / elementToCheckForScale.offsetHeight || 1 : 1;\n  }\n\n  const win = isElement(element) ? getWindow(element) : window;\n  const addVisualOffsets = !isLayoutViewport() && isFixedStrategy;\n  const x = (clientRect.left + (addVisualOffsets ? (_win$visualViewport$o = (_win$visualViewport = win.visualViewport) == null ? void 0 : _win$visualViewport.offsetLeft) != null ? _win$visualViewport$o : 0 : 0)) / scaleX;\n  const y = (clientRect.top + (addVisualOffsets ? (_win$visualViewport$o2 = (_win$visualViewport2 = win.visualViewport) == null ? void 0 : _win$visualViewport2.offsetTop) != null ? _win$visualViewport$o2 : 0 : 0)) / scaleY;\n  const width = clientRect.width / scaleX;\n  const height = clientRect.height / scaleY;\n  return {\n    width,\n    height,\n    top: y,\n    right: x + width,\n    bottom: y + height,\n    left: x,\n    x,\n    y\n  };\n}\n\nfunction getDocumentElement(node) {\n  return ((isNode(node) ? node.ownerDocument : node.document) || window.document).documentElement;\n}\n\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n\n  return {\n    scrollLeft: element.pageXOffset,\n    scrollTop: element.pageYOffset\n  };\n}\n\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;\n}\n\nfunction isScaled(element) {\n  const rect = getBoundingClientRect(element);\n  return round(rect.width) !== element.offsetWidth || round(rect.height) !== element.offsetHeight;\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const rect = getBoundingClientRect(element, // @ts-ignore - checked above (TS 4.1 compat)\n  isOffsetParentAnElement && isScaled(offsetParent), strategy === 'fixed');\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = {\n    x: 0,\n    y: 0\n  };\n\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent, true);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n\n  return {\n    x: rect.left + scroll.scrollLeft - offsets.x,\n    y: rect.top + scroll.scrollTop - offsets.y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n\n  const result = // Step into the shadow DOM of the parent of a slotted node\n  node.assignedSlot || // DOM Element detected\n  node.parentNode || ( // ShadowRoot detected\n  isShadowRoot(node) ? node.host : null) || // Fallback\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\n\nfunction getTrueOffsetParent(element) {\n  if (!isHTMLElement(element) || getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n\n  return element.offsetParent;\n}\n\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else {\n      currentNode = getParentNode(currentNode);\n    }\n  }\n\n  return null;\n} // Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\n\n\nfunction getOffsetParent(element) {\n  const window = getWindow(element);\n  let offsetParent = getTrueOffsetParent(element);\n\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle(offsetParent).position === 'static') {\n    offsetParent = getTrueOffsetParent(offsetParent);\n  }\n\n  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle(offsetParent).position === 'static' && !isContainingBlock(offsetParent))) {\n    return window;\n  }\n\n  return offsetParent || getContainingBlock(element) || window;\n}\n\nfunction getDimensions(element) {\n  if (isHTMLElement(element)) {\n    return {\n      width: element.offsetWidth,\n      height: element.offsetHeight\n    };\n  }\n\n  const rect = getBoundingClientRect(element);\n  return {\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n\n  if (offsetParent === documentElement) {\n    return rect;\n  }\n\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = {\n    x: 0,\n    y: 0\n  };\n\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } // This doesn't appear to be need to be negated.\n    // else if (documentElement) {\n    //   offsets.x = getWindowScrollBarX(documentElement);\n    // }\n\n  }\n\n  return { ...rect,\n    x: rect.x - scroll.scrollLeft + offsets.x,\n    y: rect.y - scroll.scrollTop + offsets.y\n  };\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const layoutViewport = isLayoutViewport();\n\n    if (layoutViewport || !layoutViewport && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable\n\nfunction getDocumentRect(element) {\n  var _element$ownerDocumen;\n\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = (_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;\n  const width = max(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);\n  const height = max(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n\n  if (getComputedStyle(body || html).direction === 'rtl') {\n    x += max(html.clientWidth, body ? body.clientWidth : 0) - width;\n  }\n\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n\n  if (isLastTraversableNode(parentNode)) {\n    // @ts-ignore assume body is always available\n    return node.ownerDocument.body;\n  }\n\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n\n  return getNearestOverflowAncestor(parentNode);\n}\n\nfunction getOverflowAncestors(node, list) {\n  var _node$ownerDocument;\n\n  if (list === void 0) {\n    list = [];\n  }\n\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.body);\n  const win = getWindow(scrollableAncestor);\n\n  if (isBody) {\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : []);\n  }\n\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor));\n}\n\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, false, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  return {\n    top,\n    left,\n    x: left,\n    y: top,\n    right: left + element.clientWidth,\n    bottom: top + element.clientHeight,\n    width: element.clientWidth,\n    height: element.clientHeight\n  };\n}\n\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  if (clippingAncestor === 'viewport') {\n    return rectToClientRect(getViewportRect(element, strategy));\n  }\n\n  if (isElement(clippingAncestor)) {\n    return getInnerBoundingClientRect(clippingAncestor, strategy);\n  }\n\n  return rectToClientRect(getDocumentRect(getDocumentElement(element)));\n} // A \"clipping ancestor\" is an overflowable container with the characteristic of\n// clipping (or hiding) overflowing elements with a position different from\n// `initial`\n\n\nfunction getClippingElementAncestors(element) {\n  let result = getOverflowAncestors(element).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element; // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle(currentNode);\n    const containingBlock = isContainingBlock(currentNode);\n    const shouldDropCurrentNode = elementIsFixed ? !containingBlock && !currentContainingBlockComputedStyle : !containingBlock && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position);\n\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n\n    currentNode = getParentNode(currentNode);\n  }\n\n  return result;\n} // Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors\n\n\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? getClippingElementAncestors(element) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nconst platform = {\n  getClippingRect,\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  isElement,\n  getDimensions,\n  getOffsetParent,\n  getDocumentElement,\n\n  async getElementRects(_ref) {\n    let {\n      reference,\n      floating,\n      strategy\n    } = _ref;\n    const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n    const getDimensionsFn = this.getDimensions;\n    return {\n      reference: getRectRelativeToOffsetParent(reference, await getOffsetParentFn(floating), strategy),\n      floating: {\n        x: 0,\n        y: 0,\n        ...(await getDimensionsFn(floating))\n      }\n    };\n  },\n\n  getClientRects: element => Array.from(element.getClientRects()),\n  isRTL: element => getComputedStyle(element).direction === 'rtl'\n};\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  const {\n    ancestorScroll: _ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = true,\n    animationFrame = false\n  } = options;\n  const ancestorScroll = _ancestorScroll && !animationFrame;\n  const ancestors = ancestorScroll || ancestorResize ? [...(isElement(reference) ? getOverflowAncestors(reference) : reference.contextElement ? getOverflowAncestors(reference.contextElement) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  let observer = null;\n\n  if (elementResize) {\n    let initialUpdate = true;\n    observer = new ResizeObserver(() => {\n      if (!initialUpdate) {\n        update();\n      }\n\n      initialUpdate = false;\n    });\n    isElement(reference) && !animationFrame && observer.observe(reference);\n\n    if (!isElement(reference) && reference.contextElement && !animationFrame) {\n      observer.observe(reference.contextElement);\n    }\n\n    observer.observe(floating);\n  }\n\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n\n  if (animationFrame) {\n    frameLoop();\n  }\n\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n\n  update();\n  return () => {\n    var _observer;\n\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    (_observer = observer) == null ? void 0 : _observer.disconnect();\n    observer = null;\n\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain CSS positioning\n * strategy.\n */\n\nconst computePosition = (reference, floating, options) => computePosition$1(reference, floating, {\n  platform,\n  ...options\n});\n\nexport { autoUpdate, computePosition, getOverflowAncestors, platform };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}